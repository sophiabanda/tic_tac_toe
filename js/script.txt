//Solution attempt 1:

if (playerX.length >= 3) {
      for (let i = 0; i < winningCombinations.length; i++) {
        let combo = winningCombinations[i];
        let compare = (playerX, combo) =>
          combo.every((c) => playerX.includes(c));
        console.log('x array:', playerX);
        if ((compare = true)) {
          winner = players[1];
          console.log('winner', winner);
        }
      }
    }

 if (playerO.length >= 3) {
      for (let i = 0; i < winningCombinations.length; i++) {
        let combo = winningCombinations[i];
        let compare = (playerO, combo) =>
          combo.every((c) => playerO.includes(c));
        console.log('o array:', playerO);

        if ((compare = true)) {
          winner = players[-1];
          console.log('winner', winner);
        }
      }
    }

    /////////////////////////////

     for (let i = 0; i < winningCombinations.length; i++) {
    let combo = winningCombinations[i];
    if (playerX.sort().join(',') === combo.sort().join(',')) {
      winner = players[1];
    } else if (playerO.sort().join(',') === combo.sort().join(',')) {
      winner = players[-1];
    }
  }

  for(let i = 0; i < winningCombinations.length; i++) {
    let comboNumbers = winningCombinations[i]
    for(let w =0; w < comboNumbers.length; w++) {
      if(playerO.includes(comboNumbers[w]) === true) {
        winner = playerO;
      } else if (playerX.includes(comboNumbers[w]) === true) {
        winner = playerX;
      }
    }
  }

   for (let i = 0; i < winningCombinations.length; i++) {
    let combo = winningCombinations[i];
    console.log('combo', combo)
    if (playerX.sort().join(',') === combo.sort().join(',')) {
      winner = players[1];
    } else if (playerO.sort().join(',') === combo.sort().join(',')) {
      winner = players[-1];
    } else if (playerO.length > 3) {
      for(let i = 0; combo.length; i++) {
        if(playerO.includes(combo[i]))
      }
    }
  }
